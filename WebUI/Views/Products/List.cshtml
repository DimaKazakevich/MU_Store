@using WebUI.Models
@using WebUI.HtmlHelpers;

@model  ClothesListViewModel

@{
    ViewBag.Title = "MU Store";
}

<style>
    .pull-right a {
        margin: 8px;
    }
</style>

@if (Model.Clothes.Count() > 0)
{
    <div style="display:flex; justify-content:space-between">
        @if (Model.CurrentCategory != null && @HttpContext.Current.Request.RequestContext.RouteData.Values["controller"].ToString() != "Navigation")
        {
            <div style="display:flex; margin-top:10px;font-size:20px;font-weight:800; align-self:flex-start">@Model.CurrentCategory</div>
        }
        else if (@HttpContext.Current.Request.RequestContext.RouteData.Values["controller"].ToString() == "Navigation")
        {
            <div style="display:flex">
                <div style="display:flex; margin-top:10px;font-size:20px;font-weight:800; align-self:flex-start">@ViewData["searchString"]</div>
                <div style="padding-left:20px; margin-top:16px;">@Model.Clothes.Count() Products</div>
            </div>
        }

        <div class="sortingDropDown" style="display:flex; margin-bottom:40px; align-self:flex-end">
            <select class="drop-down" id="sortOrder" name="sortOrder">
                <option>Sort By</option>
                <option value="DESC">Price High to Low</option>
                <option value="ASC">Price Low to High</option>
            </select>
        </div>
    </div>
    <div id="content" style="display:flex; flex-wrap:wrap; justify-content:end; max-width:1020px; border-top: 1px solid lightgray; padding-top:10px">
        @foreach (var item in Model.Clothes)
        {
            if (item.Images.Any(x => x.ClothesId == item.Article))
            {
                @Html.Partial("ClothesSummary", item);
            }
        }
    </div>
    if (@HttpContext.Current.Request.RequestContext.RouteData.Values["controller"].ToString() != "Navigation")
    {
        <div class="btn-group pull-right" style="align-self:flex-end; display:flex">
            @Html.PageLinks(Model.PagingInfo, x => Url.Action("List", "Products", new { page = x, category = Model.CurrentCategory }))
        </div>
    }
}
else
{
    <style>
        #categories {
            display: none;
        }

        .row.panel {
            justify-content: flex-end;
        }
        .rowContent {
            justify-content: center;
        }
    </style>
    <div style="display:flex">
        <div>
            <img src="@Url.Content("~/Content/Images/sad.png")" width="222" height="162" />
        </div>

        <section id="browseResults">
            <div class="emptySearch" style="">
                <h4 style="font-weight:600; font-size:16px">We're sorry but no matches have been found</h4>
                <h5>0 products found</h5>
                <p>Your search for "<b>@ViewData["searchString"]</b>" did not match any products. Please review our suggestions and try searching again:</p>
                <ul>
                    <li style="list-style-type:disc">Check for typos or spelling errors</li>
                    <li style="list-style-type:disc">Try different words</li>
                    <li style="list-style-type:disc">Broaden your search by using fewer words</li>
                </ul>
            </div>
        </section>
    </div>
}

<div id="sizeModal" class="modal">
    <div class="modal-content" style="width:400px">
        <div class="modal-header">
            <span id="close" class="close">&times;</span>
            <h2>Choose size</h2>
        </div>
        <div class="modal-body" style="display:flex; justify-content:center; align-items:center">
        </div>
        <div class="modal-footer" style="display:flex; justify-content:center; align-items:center">
            <img src=@Url.Content("~/Content/Images/ManU-fanatics.png") width="50" height="50" />
        </div>
    </div>
</div>

<script>
    $(document).ready(function () {
        $("select.drop-down").change(function () {
            var selectedSortDirection = $(this).children("option:selected").val();
            switch (selectedSortDirection) {
                case ('DESC'): {
                    sort("desc");
                    break;
                }
                case ('ASC'): {
                    sort("asc");
                    break;
                }
            }
        });
    });

    function sort(sortOrder) {
        let content = document.querySelector('#content');
        let divsToSort = [...document.querySelectorAll('#content > div')];
        let desc;

        if (sortOrder === 'desc') {
            desc = true;
        }

        divsToSort.sort(function (a, b) {
            na = parseInt(a.querySelector('.price').innerText.replace("$", "").trim());
            nb = parseInt(b.querySelector('.price').innerText.replace("$", "").trim());
            return desc ? (nb - na) : (na - nb);
        });

        divsToSort.forEach(el => content.appendChild(el));
    }
</script>

<style>
    .overlay {
        background-color: rgba(0,0,0,.5);
        position: fixed;
        top: 0;
        left: 0;
        height: 100%;
        width: 100%;
        z-index: 1000;
    }

    #Spinner {
        line-height: 1.42857143;
        color: #333;
        background-color: #fff;
    }
</style>





